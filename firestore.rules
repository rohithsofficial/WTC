rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isStaff() {
      return isAuthenticated() && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'staff' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isStaff());
      allow update: if isAuthenticated() && (isOwner(userId) || isStaff());
      allow create: if isAuthenticated(); // Allow users to create their own profile
      allow delete: if isAuthenticated() && isAdmin();
    }

    // Orders collection
    match /orders/{orderId} {
      allow read: if isAuthenticated() && 
        (isOwner(resource.data.userId) || isStaff());
      allow create: if isAuthenticated(); // Allow users to create their own orders
      allow update: if false; // Orders should not be modified after creation
      allow delete: if isAuthenticated() && isAdmin();
    }

    // Loyalty transactions collection
    match /loyaltyTransactions/{transactionId} {
      allow read: if isAuthenticated() && 
        (isOwner(resource.data.userId) || isStaff());
      allow create: if isAuthenticated() && 
        (isOwner(request.resource.data.userId) || isStaff());
      allow update: if false; // Transactions should not be modified
      allow delete: if isAuthenticated() && isAdmin();
    }
  }
} 